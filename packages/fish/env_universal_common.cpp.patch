diff -u -r ../fish-shell-master/src/env_universal_common.cpp ./src/env_universal_common.cpp
--- ../fish-shell-master/src/env_universal_common.cpp	2016-03-09 07:07:04.000000000 -0500
+++ ./src/env_universal_common.cpp	2016-03-12 15:47:14.502255105 -0500
@@ -166,7 +166,7 @@
         }
 
         // /tmp/fish.user
-        std::string tmpdir = "/tmp/fish.";
+        std::string tmpdir = "@TERMUX_PREFIX@/tmp/fish.";
         tmpdir.append(uname);
         if (check_runtime_path(tmpdir.c_str()) != 0)
         {
@@ -1142,6 +1142,7 @@
     return result;
 }
 
+#ifndef __ANDROID__
 class universal_notifier_shmem_poller_t : public universal_notifier_t
 {
     /* This is what our shared memory looks like. Everything here is stored in network byte order (big-endian) */
@@ -1304,6 +1305,7 @@
         }
     }
 };
+#endif
 
 /* A notifyd-based notifier. Very straightforward. */
 class universal_notifier_notifyd_t : public universal_notifier_t
@@ -1625,7 +1627,9 @@
     } options[] =
     {
         {"default", universal_notifier_t::strategy_default},
+#ifndef __ANDROID__
         {"shmem", universal_notifier_t::strategy_shmem_polling},
+#endif
         {"pipe", universal_notifier_t::strategy_named_pipe},
         {"notifyd", universal_notifier_t::strategy_notifyd}
     };
@@ -1687,8 +1691,10 @@
     }
     switch (strat)
     {
+#ifndef __ANDROID__
         case strategy_shmem_polling:
             return new universal_notifier_shmem_poller_t();
+#endif
             
         case strategy_notifyd:
             return new universal_notifier_notifyd_t();
